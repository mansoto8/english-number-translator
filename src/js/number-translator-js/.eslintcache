[{"/Users/jsoto/training/number-translator/src/js/number-translator-js/src/App.js":"1","/Users/jsoto/training/number-translator/src/js/number-translator-js/src/reportWebVitals.js":"2","/Users/jsoto/training/number-translator/src/js/number-translator-js/src/index.js":"3","/Users/jsoto/training/number-translator/src/js/number-translator-js/src/components/TranslatorForm.js":"4","/Users/jsoto/training/number-translator/src/js/number-translator-js/src/components/TranslationHistory.js":"5"},{"size":1227,"mtime":1607348463119,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1607315836546,"results":"8","hashOfConfig":"7"},{"size":547,"mtime":1607315918766,"results":"9","hashOfConfig":"7"},{"size":2131,"mtime":1607347511578,"results":"10","hashOfConfig":"7"},{"size":1929,"mtime":1607356696208,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"lqj6hm",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jsoto/training/number-translator/src/js/number-translator-js/src/App.js",["23","24"],"/Users/jsoto/training/number-translator/src/js/number-translator-js/src/reportWebVitals.js",[],"/Users/jsoto/training/number-translator/src/js/number-translator-js/src/index.js",[],"/Users/jsoto/training/number-translator/src/js/number-translator-js/src/components/TranslatorForm.js",["25"],"import React, {Component} from 'react';\nimport {Button, Container, Form, FormGroup, Input, Label} from 'reactstrap';\nimport './TranslatorForm.css';\n\nclass TranslatorForm extends Component {\n\n    emptyItem = {\n        number: 0,\n        translation: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        let {item} = this.state;\n\n        const translation = await fetch('/api/numbers' + (item.number ? '/' + item.number : ''), {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n        });\n\n        const resp = await translation.json();\n        item.translation = resp.output;\n        this.setState({item});\n    }\n\n    render() {\n        const {item} = this.state;\n\n        return <div>\n            <Container>\n                <Form onSubmit={this.handleSubmit} className={\"translator-form\"}>\n                    <Input type=\"number\" name=\"number\" id=\"number-input\" value={item.number || ''}\n                           onChange={this.handleChange} placeholder=\"Enter a number\"/>\n                    <Button color=\"primary\" type=\"submit\">Translate</Button>{' '}\n                </Form>\n                <div className=\"result-div\">\n                    <Label for=\"translation-output\" id={\"translation-output-label\"}>The number translated is: </Label>\n                    <Input type=\"text\" name=\"translation-output\" id=\"translation-output\" value={item.translation || ''}\n                           readOnly/>\n                </div>\n            </Container>\n        </div>\n    }\n}\n\nexport default TranslatorForm;\n","/Users/jsoto/training/number-translator/src/js/number-translator-js/src/components/TranslationHistory.js",["26","27"],{"ruleId":"28","severity":1,"message":"29","line":2,"column":8,"nodeType":"30","messageId":"31","endLine":2,"endColumn":12},{"ruleId":"28","severity":1,"message":"32","line":34,"column":12,"nodeType":"30","messageId":"31","endLine":34,"endColumn":24},{"ruleId":"28","severity":1,"message":"33","line":2,"column":34,"nodeType":"30","messageId":"31","endLine":2,"endColumn":43},{"ruleId":"28","severity":1,"message":"34","line":2,"column":28,"nodeType":"30","messageId":"31","endLine":2,"endColumn":32},{"ruleId":"35","severity":1,"message":"36","line":39,"column":42,"nodeType":"37","messageId":"38","endLine":39,"endColumn":44},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'translations' is assigned a value but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]